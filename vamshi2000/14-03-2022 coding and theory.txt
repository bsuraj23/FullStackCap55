VAMSHI MAHADEV
CAPG49LSRB429


//ABSTRACTION CODE
abstract class Animal {
 public abstract void animalSound();
 public void sleep() {
 System.out.println("Zzz");
 }
}
class Cat extends Animal {
 public void animalSound() {
 System.out.println("The cat says: meow meow");
 }
}
class Main {
 public static void main(String[] args) {
 Cat myCat = new Cat();
 myCat.animalSound();
 myCat.sleep();
 }
}

//STAR CODE
package com.HandsOn;

import java.util.Scanner;

public class Star{
	public void FullStar(int row){
		for (int i=1; i<=row; i++) 
        { 
           
            for (int j=row; j>i; j--)
            {
                System.out.print(" ");
            }
         
            for (int k=1; k<=(i * 2) -1; k++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
		
	}
	public void LeftStar(int row) {
		for (int i=1; i<=row; i++)
        {
            for (int j=1; j<=i; j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
		
	}
	public void RightStar(int row) {
		for (int i=1; i<=row; i++) 
        { 
            for (int j=row; j>i; j--)
            {
                System.out.print(" ");
            }
            for (int k=1; k<=i; k++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
		
	}

}
class Main{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int row=sc.nextInt();
		Star star=new Star();
		star.FullStar(row);
		star.LeftStar(row);
		star.RightStar(row);
		
	}
}

//POLYMORPHISM
class Animal{ 
void eat(){System.out.println("eating...");} 
} 
class Dog extends Animal{ 
void eat(){System.out.println("eating bread...");} 
} 
class Cat extends Animal{ 
void eat(){System.out.println("eating rat...");} 
} 
class Lion extends Animal{ 
void eat(){System.out.println("eating meat...");} 
} 
class Polymorphism{ 
public static void main(String[] args){ 
Animal a; 
a=new Dog(); 
a.eat(); 
a=new Cat(); 
a.eat(); 
a=new Lion(); 
a.eat(); 
}
}

//INHERITENCE
package com.HandsOn;

public class Inheritance {
	int salary=40000;

}
class B extends Inheritance{
	int bonus=10000;
}
class Source{
	public static void main(String[] args) {
		B b=new B();
		System.out.println("salary:"+b.salary);
		System.out.println("Bonus:"+b.bonus);
	}
}

//ENCAPSUATION
public class Encapsulation {
 private String name;
 private String idNum;
 private int age;
 public int getAge() {
 return age;
 }
 public String getName() {
 return name;
 }
 public String getIdNum() {
 return idNum;
 }
 public void setAge( int newAge) {
 age = newAge;
 }
 public void setName(String newName) {
 name = newName;
 }
 public void setIdNum( String newId) {
 idNum = newId;
 }
}
public class RunEncapsulation {
 public static void main(String args[]) {
 Encapsulation encap = new Encapsulation ();
 encap.setName("James");
 encap.setAge(20);
 encap.setIdNum("12343ms");
 System.out.print("Name : " + encap.getName() + " Age : " + encap.getAge());
 }
}



//Theory questions

1.What is Debugging?
The Java Platform Debugger Architecture is a collection of APIs to debug Java code. Java Debugger Interface - defines a high-level Java language interface that developers can easily use to write remote debugger application tools. 

2.What are the default packages present in java?
Java compiler imports java. lang package internally by default. It provides the fundamental classes that are necessary to design a basic Java program. 

3.Can we have an else condition without if condition?
 it is very common to have an if without an else when there is no specific activity that needs to be performed when the condition is false. 

4.Other than boolean can we use anything in if condition?
if ( condition ) statement; if is a Java reserved word The condition must be a boolean expression. It must evaluate to either true or false. If the condition is true, the statement is executed. 

5.why break is imp in switch case?
The case statements in a switch statements are simply labels. When you switch on a value, the switch statement essentially does a goto to the label with the matching value. This means that the break is necessary to avoid passing through to the code under the next label. 

6.Understand the naming conventions in java?
For variables, the Java naming convention is to always start with a lowercase letter and then capitalize the first letter of every subsequent word. Variables in Java are not allowed to contain white space, so variables made from compound words are to be written with a lower camel case syntax. 
