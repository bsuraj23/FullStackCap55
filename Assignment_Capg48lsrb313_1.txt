                                  Assignment -1.      
                                                                       Name: J Sai Ram Sampath.
                                                                           Roll:CAPG48LSRB313.
1)Do a program to print the star patterns using switch case ?
Code:
import java.util.Scanner;
public class MenuDrivenExample{
public static void main(String[] args){
		int choice=0;
		try (Scanner sc = new Scanner(System.in)) {
			System.out.println("Below are the star patterns that you want to choose ?");
			System.out.println("1: Full Star");
			System.out.println("2: Left star");
			System.out.println("3: right star");
loop: while(true) {
			int i,j,row;
			System.out.println("Make a choice ?");
			choice =sc.nextInt();
			switch(choice)
				{
				case 1:
					
					System.out.print("Enter the number of rows you want to print: ");  
					 
					row = sc.nextInt();  
					     
					for ( i=0; i<row; i++)   
					{  
				       for (j=row-i; j>1; j--)   
					                 {  
				                      System.out.print(" ");   
					                 }   
					for (j=0; j<=i; j++ )   
					{   
					    System.out.print("* ");   
					}   
				        System.out.println();  
					}
			       break;
			    case 2:
					System.out.print("Enter the number of rows you want to print: ");  
					 
					row = sc.nextInt();  
				 
					for (i=0; i<row; i++)   
					{  
					    for (j=2*(row-i); j>=0; j--)         
					{  
				             System.out.print(" ");   
					}   
					 
					for (j=0; j<=i; j++ )   
					{   
				     
					        System.out.print("* ");   
					}   
 
					System.out.println();   
					}   
					break;
				case 3:
					System.out.print("Enter the number of rows you want to print: ");  
					 
					row = sc.nextInt();  
					for(i=0; i<row; i++)   
					{   
					  for(j=0; j<=i; j++)   
					                      {   
				
					System.out.print("* ");   
					                      }   
				 
					System.out.println();   
					}   
					break loop; 
					
				default:
					System.out.println("Invalid choice!Please make a valide choice");
				 }
            }
		}
	}
}
2)Do an Example for Each one in oops concepts?

Polymorphism: 
 public class Animal 
{  	public void animalSound() { 
 	    System.out.println("The animal makes a sound"); 
 	  } 
 	} 
class Pig extends Animal
 {  	  public void animalSound() 
{
  System.out.println("The pig says: wee wee"); 
 } 
 } 
 
 class Dog extends Animal {  
	  public void animalSound() { 
 	    System.out.println("The dog says: bow wow"); 
 	  } 
 	} 
 

public class Main { 
 
 	public static void main(String[] args) { 
 	 	 
          Animal myAnimal = new Animal();  
        Animal myPig = new Pig();  	    
        Animal myDog = new Dog();  // 
myAnimal.animalSound(); 
myPig.animalSound();  	    
myDog.animalSound(); 
 
 	} 
 
} 
Inheritance: 
class Animal1 {  
 	 	void eat() 
 	 	{ 
 	 	 	System.out.println("eating..."); 
 	 	}   
 	}   
 	 	 
class dog extends Animal1 
 	 	{   
 	 	void bark() 
 	 	{ 
 	 	 	System.out.println("barking..."); 
 	 	}   
 	}   
class BabyDog extends dog 
 	 	{   
 	 	void weep() 
 	 	{ 
 	 	 	System.out.println("weeping..."); 
 	 	}   
 	}   
 

public class Inheritance { 
 
 	public static void main(String[] args) { 
 	 
 	 	BabyDog d=new BabyDog();    	 	d.weep();   
 	 	d.bark();   
 	 	d.eat();   
 
 	} 
 
}  
  
 Abstraction: 
 

public abstract class MotorBike { 
 	 
 	abstract void brake(); 
 
}  
class SportsBike extends MotorBike { 
     
 	  // implementation of abstract method  	  public void brake() { 
 	    System.out.println("SportsBike Brake"); 
 	  } 
 	} 
 
 	class MountainBike extends MotorBike { 
 	     
 	  // implementation of abstract method  	  public void brake() { 
 	    System.out.println("MountainBike Brake"); 
 	  } 
 	} 
 

public class Test { 
 
 	public static void main(String[] args) { 
 	 	 
 	 	MountainBike m1 = new MountainBike();  	    m1.brake(); 
 	    SportsBike s1 = new SportsBike(); 
 	    s1.brake(); 
 
 	} 
 
} 
Encapsulation: 

public class Employee { 
 	 
 	private int id;  	private String name; 
 	private int salary; 
 	 
 	 
 	public int getId() { 
 	 	return id; 
 	} 
 	public void setId(int id) { 
 	 	this.id = id; 
 	} 
String return name; 	public 	getName() { 
 	  
 	} 
 	public void setName(String name) {  	 	this.name = name; 
 	} 
 	public int getSalary() { 
 	 	return salary; 
 	} 
 	public void setSalary(int salary) {  	 	this.salary = salary; 
 	} 
}  

public class Test { 
 
 public static void main(String[] args) {     Employee e =new Employee();      e.setId(350);   e.setName("Harika");   e.setSalary(50000);      System.out.println(e.getId());   System.out.println(e.getName());  
} 
}  System.out.println(e.getSalary());  
}
}
