N.MD.Mujaheed
CAPG48LSRb352


//ABSTRACTION CODE
abstract class Animal {
 public abstract void animalSound();
 public void sleep() {
 System.out.println("Zzz");
 }
}
class Cat extends Animal {
 public void animalSound() {
 System.out.println("The cat says: meow meow");
 }
}
class Main {
 public static void main(String[] args) {
 Cat myCat = new Cat();
 myCat.animalSound();
 myCat.sleep();
 }
}

//STAR CODE
package com.HandsOn;

import java.util.Scanner;

public class Star{
	public void FullStar(int row){
		for (int i=1; i<=row; i++) 
        { 
           
            for (int j=row; j>i; j--)
            {
                System.out.print(" ");
            }
         
            for (int k=1; k<=(i * 2) -1; k++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
		
	}
	public void LeftStar(int row) {
		for (int i=1; i<=row; i++)
        {
            for (int j=1; j<=i; j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
		
	}
	public void RightStar(int row) {
		for (int i=1; i<=row; i++) 
        { 
            for (int j=row; j>i; j--)
            {
                System.out.print(" ");
            }
            for (int k=1; k<=i; k++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
		
	}

}
class Main{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int row=sc.nextInt();
		Star star=new Star();
		star.FullStar(row);
		star.LeftStar(row);
		star.RightStar(row);
		
	}
}

//POLYMORPHISM
class Animal{ 
void eat(){System.out.println("eating...");} 
} 
class Dog extends Animal{ 
void eat(){System.out.println("eating bread...");} 
} 
class Cat extends Animal{ 
void eat(){System.out.println("eating rat...");} 
} 
class Lion extends Animal{ 
void eat(){System.out.println("eating meat...");} 
} 
class Polymorphism{ 
public static void main(String[] args){ 
Animal a; 
a=new Dog(); 
a.eat(); 
a=new Cat(); 
a.eat(); 
a=new Lion(); 
a.eat(); 
}
}

//INHERITENCE
package com.HandsOn;

public class Inheritance {
	int salary=40000;

}
class B extends Inheritance{
	int bonus=10000;
}
class Source{
	public static void main(String[] args) {
		B b=new B();
		System.out.println("salary:"+b.salary);
		System.out.println("Bonus:"+b.bonus);
	}
}

//ENCAPSUATION
public class Encapsulation {
 private String name;
 private String idNum;
 private int age;
 public int getAge() {
 return age;
 }
 public String getName() {
 return name;
 }
 public String getIdNum() {
 return idNum;
 }
 public void setAge( int newAge) {
 age = newAge;
 }
 public void setName(String newName) {
 name = newName;
 }
 public void setIdNum( String newId) {
 idNum = newId;
 }
}
public class RunEncapsulation {
 public static void main(String args[]) {
 Encapsulation encap = new Encapsulation ();
 encap.setName("James");
 encap.setAge(20);
 encap.setIdNum("12343ms");
 System.out.print("Name : " + encap.getName() + " Age : " + encap.getAge());
 }
}
